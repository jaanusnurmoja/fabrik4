<?xml version="1.0" encoding="UTF-8"?>

<!-- 
Requires phing to be installed.

To use, execute phing from the root of your repo:

phing -f linker.xml -Dp=/var/www/html **change to whatever the path is to your web root

You can restore the files like this:
phing -f linker.xml -Dp=/var/www/html unlink

Note: At present it will link just the component and libraries. I originally had it linking all of the plugins but will change this to only link the plugins we are using. I also need to remove the links for the database stuff that is no longer needed but this is commented out at the moment so no rush.

NOTE:NOTE: once linked to not attempt to install Fabrik as whatever you install will overwrite your repo files. Make sure you unlink before you attempt to do an install.
-->

    <project name="linker" default="link" basedir=".">
        <property name="URI.base" value="./"/>
        <resolvepath propertyName="URI.base" file="${URI.base}"/>
        <property name="p" value="" />
        <property name="admintmpl" value="atum" />
        <property name="component" value="com_fabrik"/>
        <property name="rootPath" value="${URI.base}"/>

    <!-- the following is a list of full directories to be deleted/linked/copied -->
    <property name="targetDirectories" value= "
        administrator/components/${component},
        components/${component},
        libraries/fabrik,
        plugins/system/fabrik,
        media/com_fabrik
        " />
<!-- MAKE SURE ALL OF THE ABOVE TARGETS HAVE A COMMA AFTER THEM EXCEPT THE LAST ONE -->
<!--
        components/com_comprofiler/plugin/user/plug_fabrik,
        plugins/search/fabrik,
        plugins/system/fabrikcron,
        plugins/system/fabrikj2store
-->

    <!-- Plugins are handled seperately -->
    <property name="targetPluginTypes" value="
        plugins/community/fabrik,
        plugins/content/fabrik,
        plugins/fabrik_cron,
        plugins/fabrik_element,
        plugins/fabrik_form,
        plugins/fabrik_list,
        plugins/fabrik_validationrule,
        plugins/fabrik_visualization
        " />

    <!-- For each plugin type we define which plugins to link/unlink, empty is no plugins, * is all plugins -->
    <property name="plugins/community/fabrik" value="" />
    <property name="plugins/content/fabrik" value="fabrik" />
    <property name="plugins/fabrik_cron" value="email. php" />
    <property name="plugins/fabrik_element" value="calc, checkbox, databasejoin, date, dropdown, field, internalid, jdate, textarea" />
    <property name="plugins/fabrik_form" value="email, php, redirect" />
    <property name="plugins/fabrik_list" value="php" />
    <property name="plugins/fabrik_validationrule" value="notempty, php" />
    <property name="plugins/fabrik_visualization" value="fullcalendar" />

    <target name="processPlugins" description="Process the defined plugins">
        <foreach list="${targetPluginTypes}" param="pluginType" target="processPluginType" />
    </target>

    <target name="processPluginType" description="Process a specific plugin type">
        <if>
            <istrue value="${${pluginType}}" />
            <then>
                <if>
                    <equals arg1="${${pluginType}}" arg2="*" />
                    <then>
                        <echo>${pluginType} is all plugins</echo>
                    </then>
                    <else>
                        <!-- process a specific list of plugins -->
                        <foreach list="${${pluginType}}" param="plugin" target="processPlugin" />
                    </else>
                </if>
            </then>
            <else>
                <!-- process no plugins of this type -->
            </else>
        </if>
    </target>

    <target name="processPlugin" description="Process a specific plugin of ${pluginType}">
        <if>
            <equals arg1="${processHow}" arg2="process" />
            <then>
                <phingcall target="processitem">
                    <property name="filename" value="${pluginType}/${plugin}"/>
                </phingcall>
            </then>
            <else>
                <phingcall target="deleteitem">
                    <property name="filename" value="${pluginType}/${plugin}"/>
                </phingcall>
            </else>
        </if>
    </target>

    <!-- the following is a list of subDirectories, we are targeting the items within this directory to be deleted/linked/copied -->
    <property name="targetSubDirectories" value="
        administrator/modules,
        modules
         " />

    <!-- the following is a list of specific files to be deleted/linked/copied -->
    <property name="targetFiles" value="
        libraries/src/Document/PartialDocument.php,
        libraries/src/Document/PdfDocument.php
        " />

    <property name="adminTemplateOverrides" value="
        administrator/components/com_fabrik/layouts/joomla/edit/params.php:administrator/templates/${admintmpl}/html/layouts/joomla/edit/params.php,
        administrator/components/com_fabrik/layouts/joomla/form/field/list.php:administrator/templates/${admintmpl}/html/layouts/joomla/form/field/list.php
        " />

    <target name="link" description="Link web to repo">
        <property name="masterTarget" value="link" />
        <echo>Current Path: ${rootPath}</echo>
        <echo>Target Path: ${p}</echo>
        <foreach list="${adminTemplateOverrides}" param="targetLink" target="processLink" />
        <phingcall target="deleteall" /> 
        <phingcall target="processall" />
    </target>

    <target name="unlink" description="Restore web from repo">
        <property name="masterTarget" value="unlink" />
        <echo>Current Path: ${rootPath}</echo>
        <echo>Target Path: ${p}</echo>

        <phingcall target="deleteall" /> 
        <phingcall target="processall" />
    </target>

    <target name="deleteall">
        <!-- Delete folders and files, even if symlinks -->
        <foreach list="${targetDirectories}" param="filename" target="deleteitem" />  
        <phingcall target="processPlugins"><property name="processHow" value="delete"/></phingcall>
        <foreach list="${targetSubDirectories}" param="dirname" target="deleteDirContents" /> 
        <foreach list="${targetFiles}" param="filename" target="deleteitem" />
        <phingcall target="deleteLanguages" />
    </target>

    <target name="processall">
        <!-- link or copy folders and files depensing on the masterTarget -->
        <foreach list="${targetDirectories}" param="filename" target="processitem" />  
        <phingcall target="processPlugins"><property name="processHow" value="process"/></phingcall>
        <foreach list="${adminTemplateOverrides}" param="targetLink" target="processLink" />
        <foreach list="${targetSubDirectories}" param="dirname" target="processDirContents" /> 
        <foreach list="${targetFiles}" param="filename" target="processitem" />
        <phingcall target="processLanguages" />
    </target>

    <target name="processLink">
        <exec executable="echo" outputProperty="source"><arg line="${targetLink} | cut -d ':' -f1" /></exec>
        <exec executable="echo" outputProperty="link"><arg line="${targetLink} |rev | cut -d ':' -f1 | rev" /></exec>
        <!-- If you get a phing error as a result of this php call you might have xdebug enabled for cli
            To disable it use command: 
                sudo phpdismod -s cli xdebug
            When you are done you may wish to re-enable it using this command:
                sudo phpenmod -s cli xdebug
        -->
        <!-- we need to make sure any subdirectories exist -->
        <exec executable="php" outputProperty="dirPath"><arg value="-r"/><arg value="echo dirname('${p}/${link}');" /></exec>
        <mkdir dir="${dirPath}"/>
        <if><equals arg1="${masterTarget}" arg2="link" />
            <then>
                <echo>Creating symlink from ${rootPath}/${source} to ${p}/${link}</echo>
                <symlink target="${rootPath}/${source}" link="${p}/${link}"  overwrite="true" /> 
            </then>
            <else>
                <echo>Copying ${rootPath}/${source} to ${p}/${link}</echo>
                <copy file="${rootPath}/${source}" tofile="${p}/${link}"  overwrite="true" />
            </else>
        </if>

    </target>

    <target name="processitem">
        <!-- we cannot override the passed in filename so we need to do it manually with another property -->
        <property name="file" value="${filename}" override="true" />
        <!-- preface with a directory if one was passed in -->
        <if><isset property="dirname"/><then><property name="file" value="${dirname}/${file}" override="true"/></then></if>
        <!-- set the web and repo paths-->
        <property name="webpath" value="${p}/${file}" />
        <property name="repopath" value="${rootPath}/${file}" />
        <if><equals arg1="${masterTarget}" arg2="link" />
            <then>
                <echo>Creating symlink from ${webpath} to ${repopath}</echo>
                <symlink target="${repopath}" link="${webpath}"  overwrite="true" /> 
            </then>
            <else>
                <echo>Copying ${repopath} to ${webpath}</echo>
                <phingcall target="copyfile"><property name="from" value="${repopath}"/><property name="to" value="${webpath}"/></phingcall>
           </else>
        </if>
    </target>

    <target name="deleteLink">
        <exec executable="echo" outputProperty="link"><arg line="${targetLink} | cut -d ':' -f1" /></exec>
        <exec executable="echo" outputProperty="source"><arg line="${targetLink} |rev | cut -d ':' -f1 | rev" /></exec>
        <phingcall target="deletefile"><property name="file" value="${rootPath}/${link}" override="true"/></phingcall>
    </target>

    <target name="deleteitem">
        <!-- we cannot override the passed in filename so we need to do it manually with another property -->
        <property name="file" value="${filename}" override="true" />
        <!-- preface with a directory if one was passed in -->
        <if><isset property="dirname"/><then><property name="file" value="${dirname}/${file}" override="true"/></then></if>
        <phingcall target="deletefile">
            <!-- we always work on the files in the web path -->
            <property name="file" value="${p}/${file}" override="true"/>
        </phingcall>
     </target>

     <target name="deletefile">
        <echo>Deleting item ${file}</echo>
        <!-- we have to do some magic in here as symlinks directories don't report unless we follow them, BUT, they report as a dir but need to be deleted as a file -->
        <if><available file="${file}" type="file" />
            <then><delete file="${file}" verbose="false" failonerror="false" /></then>
        </if>
        <if><available file="${file}" type="dir" />
            <then><delete dir="${file}" includeemptydirs="true" verbose="false" failonerror="true" /></then>
        </if>
        <if><available file="${file}" type="dir" followSymlinks="true"/>
            <then><delete file="${file}" verbose="false" failonerror="true" /></then>
        </if>
        <if><available file="${file}" type="file" followSymlinks="true"/>
            <then><delete file="${file}" verbose="false" failonerror="true" /></then>
        </if>
    </target>        

    <target name="processDirContents">
        <!-- here we delete the subdirectories or specific files from a higher level directory -->
        <echo>Linking or Copying contents of directory: ${dirname}</echo>
        <foreach param="filename" absparam="absname" target="processitem">
            <fileset dir="${dirname}">
                <depth max="0" min="0" />
            </fileset>
        </foreach>
    </target>

    <target name="deleteDirContents">
        <!-- here we delete the subdirectories or specific files from a higher level directory -->
        <echo>Deleting contents of directory: ${dirname}</echo>
        <foreach param="filename" absparam="absname" target="deleteitem">
            <fileset dir="${dirname}">
                <depth max="0" min="0" />
            </fileset>
        </foreach>
    </target>

    <!-- language files live in 2 spots, component site & admin so we need to do this twice and tell the deleter where -->
    <!-- withing each language dir there are sub directories for each language type -->
    <target name="deleteLanguages" description="Delete the language files from site/admin directories">
        <foreach param="dirname" target="deleteLang" absparam="abspath">
            <fileset dir="components/com_fabrik/language">
                <depth max="0" min="0" />
            </fileset>
        </foreach>
        <property name="langType" value="admin"/>
        <foreach param="dirname" target="deleteLang" absparam="abspath">
            <fileset dir="administrator/components/com_fabrik/language">
                <depth max="0" min="0" />
            </fileset>
        </foreach>
    </target>

    <target name="processLanguages" description="Link/Copy the language files from site/admin directories">
        <foreach param="dirname" target="processLang" absparam="abspath">
            <fileset dir="components/com_fabrik/language">
                <depth max="0" min="0" />
            </fileset>
        </foreach>
        <property name="langType" value="admin"/>
        <foreach param="dirname" target="processLang" absparam="abspath">
            <fileset dir="administrator/components/com_fabrik/language">
                <depth max="0" min="0" />
            </fileset>
        </foreach>
    </target>


    <target name="deleteLang">
        <!-- Entry into this targe sends in the dirnam of the language plus potentially a langType to indicate the admin languages -->
        <property name="file" value="language/${dirname}" />
        <!-- preface with a directory if one was passed in -->
        <if><isset property="langType"/><then><property name="file" value="administrator/${file}" override="true"/></then></if>
        <property name="webpath" value="${p}/${file}" />
        <property name="repopath" value="${rootPath}/${abspath}" />
        <!-- check first that the language is installed and the file is a directory, only link if it is -->
        <echo>WebPath is ${webpath} repopath is ${repopath}</echo>
        <if><available file="${webpath}" type="dir"/><then>
            <foreach param="filename" target="deleteitem">
                <fileset dir="${repopath}">
                    <depth max="0" min="0" />
                </fileset>
            </foreach>
        </then></if>
    </target>
    
    <target name="processLang">
        <!-- Entry into this targe sends in the dirnam of the language plus potentially a langType to indicate the admin languages -->
        <property name="file" value="language/${dirname}" />
        <!-- preface with a directory if one was passed in -->
        <if><isset property="langType"/><then><property name="file" value="administrator/${file}" override="true"/></then></if>
        <!-- set the web and repo paths-->
        <property name="webpath" value="${p}/${file}" />
        <property name="repopath" value="${rootPath}/${abspath}" />
        <!-- check first that the language is installed and the file is a directory, only link if it is -->
        <if><available file="${webpath}"  type="dir"/><then>
            <foreach param="filename" target="processLangitem">
                <fileset dir="${repopath}">
                    <depth max="0" min="0" />
                </fileset>
            </foreach>
        </then></if>
    </target>

    <target name="processLangitem">
        <if><equals arg1="${masterTarget}" arg2="link" />
            <then>
                <echo>Creating symlink from ${webpath}/${filename} to ${repopath}/${filename}</echo>
                <symlink target="${repopath}/${filename}" link="${webpath}/${filename}"  overwrite="true" /> 
            </then>
            <else>
                <echo>Copying ${repopath}/${filename} to ${webpath}/${filename}</echo>
                <copy file="${repopath}/${filename}" tofile="${webpath}/${filename}" overwrite="true" /> 
           </else>
        </if>
    </target>

    <target name="copydir">
        <!-- First make the directory in case it doesn't exist -->
        <echo>Copy Directory from: ${from}, to: ${to}</echo>
        <mkdir dir="${to}" />
        <copy todir="${to}">
            <fileset dir="${from}">
                <include name="**"></include>
                <exclude name="**/.svn/**"></exclude>
                <exclude name="**/*.zip"></exclude>
            </fileset>
        </copy>
    </target>

    <target name="copyfile">
        <echo>Copying ${from} to ${to}</echo>
        <if><available file="${from}" type="file" />
            <then><copy file="${from}" todir="${to}"  overwrite="true" /></then>
        </if>
        <if><available file="${from}" type="dir" />
            <then><phingcall target="copydir"><property name="from" value="${from}"/><property name="to" value="${to}"/></phingcall></then>
        </if>
    </target>

</project>